name: build-web-workflow

on:
  push:
    branches: [ main ]
    
env:
  AWS_REGION: ap-northeast-2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.3"
          channel: "stable"

      - name: Flutter clean
        run: flutter clean

      - name: Flutter get packages
        run: flutter pub get

      - name: Build Runner & version
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Generate *.env file
        run: |
          echo "API_SERVER=${{ secrets.API_SERVER }}" >> .local.env
          echo "FIREBASE_IOS_KEY=${{ secrets.FIREBASE_IOS_KEY }}" >> .env
          echo "FIREBASE_MACOS_KEY=${{ secrets.FIREBASE_MACOS_KEY }}" >> .env
          echo "FIREBASE_ANDROID_KEY=${{ secrets.FIREBASE_ANDROID_KEY }}" >> .env
          echo "FIREBASE_WINDOWS_KEY=${{ secrets.FIREBASE_WINDOWS_KEY }}" >> .env
          echo "KAKAO_NATIVE_KEY=${{ secrets.KAKAO_NATIVE_KEY }}" >> .env
          echo "KAKAO_JAVASCRIPT_KEY=${{ secrets.KAKAO_JAVASCRIPT_KEY }}" >> .env

      - name: Flutter build web
        run: flutter build web --release --base-href="/" --dart-define="BASE_URL=https://modiapp.link"

      - name: Use random for fix cache
        run: |
          ran=$RANDOM
          echo "Cache busting random: $ran"
          sed -i "s|flutter_bootstrap\.js|flutter_bootstrap.js?v=$ran|g" ./build/web/index.html
          sed -i "s|flutter\.js|flutter.js?v=$ran|g" ./build/web/index.html
          sed -i "s|main\.dart\.js|main.dart.js?v=$ran|g" ./build/web/flutter.js

      - name: Archive Production Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web
          compression-level: 0 # ÏïïÏ∂ï ÎπÑÌôúÏÑ±Ìôî

  deploy:
    name: Deploy Website to AWS Hosting
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: build/web

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3 üöÄ
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync --region ap-northeast-2 --delete build/web s3://modiapp.link 

      - name: Create CloudFront Cache Invalidation ‚òÅÔ∏è
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_ID }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
